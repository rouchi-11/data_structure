class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class Queue:
    def __init__(self):
        self.front = None
        self.rear = None

    def enqueue(self, item):
        new_node = Node(item)
        if self.rear is None:
            self.front = self.rear = new_node
        else:
            self.rear.next = new_node
            self.rear = new_node
        print(f"{item} enqueued to the queue.")

    def dequeue(self):
        if self.front is None:
            print("Queue is empty, nothing to dequeue.")
            return None
        dequeued_item = self.front.data
        self.front = self.front.next
        if self.front is None:
            self.rear = None
        return dequeued_item

    def display(self):
        if self.front is None:
            print("Queue is empty.")
        else:
            temp = self.front
            queue_elements = []
            while temp:
                queue_elements.append(temp.data)
                temp = temp.next
            print("Current queue:", queue_elements)

q = Queue()

q.enqueue(10)
q.enqueue(20)
q.enqueue(30)

q.display()

dequeued_item = q.dequeue()
print(f"Dequeued item: {dequeued_item}")
q.display()

dequeued_item = q.dequeue()
print(f"Dequeued item: {dequeued_item}")
q.display()

q.enqueue(40)
q.display()

dequeued_item = q.dequeue()
print(f"Dequeued item: {dequeued_item}")
q.display()
